1. In the below elements which of them are values or an expression? eg:- values can be
integer or string and expressions will be mathematical operators.
*
'hello'
-87.8
-
/
+
6

Ans.
Values:
'hello' (String literal)
-87.8 (Floating-point number literal)
6 (Integer literal)
Expressions:
- (Arithmetic subtraction operator)
/ (Arithmetic division operator)
+ (Arithmetic addition operator)

2. What is the difference between string and variable?
Ans.
String: A sequence of characters enclosed in single or double quotes (like 'hello' or "world"). It represents fixed text data.
Variable: A named storage location in memory that can hold a value (like a string, number, or other data). You can assign values to variables using the assignment operator (=).

3. Describe three different data types.
Ans.
Integer (int): Represents whole numbers (e.g., -2, 0, 100).
Float (float): Represents numbers with decimal points (e.g., -3.14, 1.2345).
String (str): Represents sequences of text characters (e.g., "Hello, world!", 'Python').

4. What is an expression made up of? What do all expressions do?
Ans.
Made Up Of: Variables, literals (values), and operators.
What They Do: Expressions are combinations that evaluate to a single value. They can perform calculations, comparisons, or other operations.

5. This assignment statements, like spam = 10. What is the difference between an
expression and a statement?
Ans.
Expressions: Evaluate to a single value. Used in calculations, comparisons, and function calls (e.g., 2 + 3, x > 5, len('hello')).
Statements: Perform actions but don't necessarily return a value. Examples include assignment statements (x = 10), function definitions (def my_function(): ...), and control flow statements (if, for, while).

6. After running the following code, what does the variable bacon contain?
bacon = 22
bacon + 1
Ans.
The code bacon = 22 assigns the value 22 (an integer) to the variable bacon. However, bacon + 1 is an expression that evaluates to 23 but doesn't change the value of bacon because it's not assigned to a variable. So the variable bacon contains 22.

7. What should the values of the following two terms be?
'spam' + 'spamspam'
'spam' * 3
Ans.
'spam' + 'spamspam' evaluates to "spamspamspam" (concatenates strings).
'spam' * 3 evaluates to "spamspamspam" (repeats the string three times).

8. Why is eggs a valid variable name while 100 is invalid?
Ans.
Valid variable names can start with letters (a-z, A-Z) or underscores (_). Subsequent characters can be letters, numbers, or underscores and Variable names cannot be reserved keywords in Python (like 100, if, else).

9. What three functions can be used to get the integer, floating-point number, or string
version of a value?
Ans.
int(value): Converts a value to an integer (if possible).
float(value): Converts a value to a floating-point number (if possible).
str(value): Converts a value to a string.

10. Why does this expression cause an error? How can you fix it?
'I have eaten ' + 99 + ' burritos.'
Ans.
The expression 'I have eaten ' + 99 + ' burritos.' causes an error because you're trying to concatenate a string with an integer (99).
Fix: Convert 99 to a string using str(99) before concatenation:
'I have eaten ' + str(99) + ' burritos.
